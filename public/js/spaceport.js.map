{"version":3,"names":[],"mappings":"","sources":["spaceport.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    ready: function ready() {\n        //\n    },\n\n    data: function data() {\n        return {\n            columnTypes: [{ value: 'first', text: 'first' }, { value: 'second', text: 'second' }],\n            forms: {\n                createColumn: new SpaceportForm({\n                    title: '',\n                    type: ''\n                })\n            }\n        };\n    },\n\n    methods: {\n\n        createColumn: function createColumn() {\n            var self = this;\n\n            Spaceport.post('/api/lists/' + this.$route.params.listId + '/columns/create', this.forms.createColumn).then(function (response) {\n                self.$router.go({ name: 'list.show', 'params': { listId: self.$route.params.listId } });\n            });\n        }\n    }\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"box box-success\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Create a column</h3>\\n    </div>\\n    <form role=\\\"form\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"box-body\\\">\\n            <text-field :display=\\\"'Title'\\\" :form=\\\"forms.createColumn\\\" :name=\\\"'title'\\\" :input.sync=\\\"forms.createColumn.title\\\">\\n            </text-field>\\n\\n            <select-field :display=\\\"'Type'\\\" :form=\\\"forms.createColumn\\\" :name=\\\"'type'\\\" :items=\\\"columnTypes\\\" :input.sync=\\\"forms.createColumn.type\\\">\\n            </select-field>\\n        </div>\\n        <div class=\\\"box-footer\\\">\\n            <button v-on:click=\\\"createColumn\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\columns\\\\column-create.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],2:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    ready: function ready() {\n        this.getColumn(this.$route.params.columnId);\n    },\n\n    data: function data() {\n        return {\n            column: null,\n            forms: {\n                editColumn: new SpaceportForm({\n                    title: ''\n                })\n            }\n        };\n    },\n\n    watch: {\n        'column': function column(_column) {\n            this.forms.editColumn.title = _column.title;\n        }\n    },\n\n    methods: {\n        getColumn: function getColumn(id) {\n            var self = this;\n\n            this.$http.get('/api/columns/' + id).then(function (response) {\n                self.column = response.data;\n            });\n        },\n\n        updateColumn: function updateColumn() {\n            var self = this;\n\n            Spaceport.put('/api/columns/' + this.$route.params.columnId, this.forms.editColumn).then(function (response) {\n                self.$router.go({ name: 'list.show', 'params': { listId: self.$route.params.listId } });\n            });\n        },\n\n        deleteColumn: function deleteColumn() {\n            var self = this;\n\n            Spaceport.delete('/api/columns/' + this.column.id, this.forms.editColumn).then(function () {\n                self.$router.go({ name: 'list.show', 'params': { listId: self.$route.params.listId } });\n            });\n        }\n    }\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Column</div>\\n    <form role=\\\"form\\\">\\n        <div class=\\\"panel-body\\\">\\n            <text-field :display=\\\"'Title'\\\" :form=\\\"forms.editColumn\\\" :name=\\\"'title'\\\" :input.sync=\\\"forms.editColumn.title\\\">\\n            </text-field>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button v-on:click=\\\"updateColumn\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\\n\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Delete</div>\\n    <div class=\\\"panel-body\\\">\\n        <button v-on:click=\\\"deleteColumn\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\columns\\\\column-edit.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],3:[function(require,module,exports){\n'use strict';\n\n// http://jsfiddle.net/22d08ed4/1/\n\nwindow.breadcrumbsData = ['Main'];\n\nwindow.SpaceportBreadcrumbs = {\n\n    methods: {\n        setBreadcrumb: function setBreadcrumb(text) {\n            Vue.set(breadcrumbsData, this._breadcrumbIndex, text);\n        }\n    },\n\n    route: {\n        activate: function activate(transition) {\n            this._breadcrumbIndex = breadcrumbsData.length;\n            breadcrumbsData.length++;\n            transition.next();\n        },\n\n        deactivate: function deactivate(transition) {\n            breadcrumbsData.splice(this._breadcrumbIndex, 1);\n            transition.next();\n        }\n    }\n};\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nrequire('./../forms/bootstrap.js');\n\nrequire('./breadcrumbs.js');\n\n/**\n * Load all of the core Spaceport Vue components.\n */\n\n},{\"./../forms/bootstrap.js\":6,\"./breadcrumbs.js\":3}],5:[function(require,module,exports){\n'use strict';\n\nwindow.SpaceportRouter = new VueRouter({\n    //hashbang: true,\n    //history: true,\n    linkActiveClass: \"active\",\n    //mode: 'html5',\n    //root: '/cms',\n    saveScrollPosition: true,\n    transitionOnLoad: true\n});\n\nSpaceportRouter.map({\n    '/': {\n        component: require('./../views/lists.vue')\n    },\n    '/lists': {\n        component: require('./../views/lists.vue'),\n        subRoutes: {\n            '/': {\n                name: 'list.index',\n                component: require('./../lists/list-index.vue')\n            },\n            '/create': {\n                name: 'list.create',\n                component: require('./../lists/list-create.vue')\n            },\n            '/:listId/show': {\n                name: 'list.show',\n                component: require('./../lists/list-show.vue')\n            },\n            '/:listId/edit': {\n                name: 'list.edit',\n                component: require('./../lists/list-edit.vue')\n            },\n            '/:listId/columns': {\n                name: 'list.columns',\n                component: require('./../lists/list-edit.vue')\n            },\n            '/:listId/columns/create': {\n                name: 'column.create',\n                component: require('./../columns/column-create.vue')\n            },\n            '/:listId/columns/:columnId': {\n                name: 'column.edit',\n                component: require('./../columns/column-edit.vue')\n            }\n        }\n    }\n});\n\n},{\"./../columns/column-create.vue\":1,\"./../columns/column-edit.vue\":2,\"./../lists/list-create.vue\":17,\"./../lists/list-edit.vue\":18,\"./../lists/list-index.vue\":19,\"./../lists/list-show.vue\":20,\"./../views/lists.vue\":22}],6:[function(require,module,exports){\n'use strict';\n\nrequire('./instance');\n\n/**\n * Define the form error collection class.\n */\nrequire('./errors');\n\n_.extend(Spaceport, require('./http'));\n\nrequire('./components');\n\n},{\"./components\":7,\"./errors\":8,\"./http\":15,\"./instance\":16}],7:[function(require,module,exports){\n'use strict';\n\nVue.component('text-field', require('./fields/text-field.vue'));\nVue.component('textarea-field', require('./fields/textarea-field.vue'));\nVue.component('password-field', require('./fields/password-field.vue'));\nVue.component('select-field', require('./fields/select-field.vue'));\nVue.component('radio-field', require('./fields/radio-field.vue'));\nVue.component('checkbox-field', require('./fields/checkbox-field.vue'));\n\n},{\"./fields/checkbox-field.vue\":9,\"./fields/password-field.vue\":10,\"./fields/radio-field.vue\":11,\"./fields/select-field.vue\":12,\"./fields/text-field.vue\":13,\"./fields/textarea-field.vue\":14}],8:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\n/**\n * Spark form error collection class.\n */\nwindow.SpaceportFormErrors = function () {\n    this.errors = {};\n\n    /**\n     * Determine if the collection has any errors.\n     */\n    this.hasErrors = function () {\n        return !_.isEmpty(this.errors);\n    };\n\n    /**\n     * Determine if the collection has errors for a given field.\n     */\n    this.has = function (field) {\n        return _.indexOf(_.keys(this.errors), field) > -1;\n    };\n\n    /**\n     * Get all of the raw errors for the collection.\n     */\n    this.all = function () {\n        return this.errors;\n    };\n\n    /**\n     * Get all of the errors for the collection in a flat array.\n     */\n    this.flatten = function () {\n        return _.flatten(_.toArray(this.errors));\n    };\n\n    /**\n     * Get the first error message for a given field.\n     */\n    this.get = function (field) {\n        if (this.has(field)) {\n            return this.errors[field][0];\n        }\n    };\n\n    /**\n     * Set the raw errors for the collection.\n     */\n    this.set = function (errors) {\n        if ((typeof errors === 'undefined' ? 'undefined' : _typeof(errors)) === 'object') {\n            this.errors = errors;\n        } else {\n            this.errors = { 'field': ['Something went wrong. Please try again.'] };\n        }\n    };\n\n    /**\n     * Forget all of the errors currently in the collection.\n     */\n    this.forget = function () {\n        this.errors = {};\n    };\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'items', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <div class=\\\"checkbox\\\" v-for=\\\"item in items\\\">\\n            <label>\\n                <input type=\\\"checkbox\\\" :name=\\\"item.name\\\" :value=\\\"item.value\\\" v-model=\\\"input\\\">\\n                {{ item.text }}\\n            </label>\\n        </div>\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\checkbox-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],10:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" v-model=\\\"input\\\">\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\password-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],11:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'items', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <div class=\\\"radio\\\" v-for=\\\"item in items\\\">\\n            <label>\\n                <input type=\\\"radio\\\" :name=\\\"item.name\\\" :value=\\\"item.value\\\" v-model=\\\"input\\\">\\n                {{ item.text }}\\n            </label>\\n        </div>\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\radio-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],12:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'items', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <select class=\\\"form-control\\\" v-model=\\\"input\\\">\\n            <option v-for=\\\"item in items\\\" :value=\\\"item.value\\\">\\n                {{ item.text }}\\n            </option>\\n        </select>\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\select-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],13:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" v-model=\\\"input\\\">\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\text-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],14:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    props: ['display', 'form', 'name', 'input']\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"form-group\\\" :class=\\\"{'has-error': form.errors.has(name)}\\\">\\n    <label class=\\\"col-sm-2 control-label\\\">{{ display }}</label>\\n    <div class=\\\"col-sm-10\\\">\\n        <textarea class=\\\"form-control\\\" rows=\\\"3\\\" v-model=\\\"input\\\"></textarea>\\n\\n        <span class=\\\"help-block\\\" v-show=\\\"form.errors.has(name)\\\">\\n            <strong>{{ form.errors.get(name) }}</strong>\\n        </span>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\forms\\\\fields\\\\textarea-field.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],15:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n    /**\n     * A few helper methods for making HTTP requests and doing common form actions.\n     */\n    post: function post(uri, form) {\n        return Spaceport.sendForm('post', uri, form);\n    },\n\n    put: function put(uri, form) {\n        return Spaceport.sendForm('put', uri, form);\n    },\n\n    delete: function _delete(uri, form) {\n        return Spaceport.sendForm('delete', uri, form);\n    },\n\n    sendForm: function sendForm(method, uri, form) {\n        return new Promise(function (resolve, reject) {\n            form.startProcessing();\n\n            Vue.http[method](uri, JSON.stringify(form)).then(function (response) {\n                form.finishProcessing();\n\n                resolve(response);\n            }, function (errors) {\n                form.errors.set(errors.data);\n                form.busy = false;\n\n                reject(errors);\n            });\n        });\n    }\n};\n\n},{}],16:[function(require,module,exports){\n\"use strict\";\n\n/**\n * SparkForm helper class. Used to set common properties on all forms.\n */\nwindow.SpaceportForm = function (data) {\n    var form = this;\n\n    _.extend(this, data);\n\n    this.errors = new SpaceportFormErrors();\n    this.busy = false;\n    this.successful = false;\n\n    this.startProcessing = function () {\n        form.errors.forget();\n        form.busy = true;\n        form.successful = false;\n    };\n\n    this.finishProcessing = function () {\n        form.busy = false;\n        form.successful = true;\n    };\n};\n\n},{}],17:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n    /*\n     * Bootstrap the component. Load the initial data.\n     */\n    ready: function ready() {\n        //\n    },\n\n    data: function data() {\n        return {\n            forms: {\n                createList: new SpaceportForm({\n                    title: ''\n                })\n            }\n        };\n    },\n\n    methods: {\n        /*\n         * Edit a given list.\n         */\n        createList: function createList() {\n            var self = this;\n\n            Spaceport.post('/api/lists/create/', this.forms.createList).then(function (response) {\n                self.$router.go({ name: 'list.index' });\n            });\n        }\n    }\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Listes</div>\\n    <form role=\\\"form\\\">\\n        <div class=\\\"panel-body\\\">\\n            <text-field :display=\\\"'Title'\\\" :form=\\\"forms.createList\\\" :name=\\\"'title'\\\" :input.sync=\\\"forms.createList.title\\\">\\n            </text-field>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button v-on:click=\\\"createList\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\lists\\\\list-create.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],18:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    ready: function ready() {\n        this.getList(this.$route.params.listId);\n    },\n\n    data: function data() {\n        return {\n            list: null,\n            forms: {\n                editList: new SpaceportForm({\n                    title: ''\n                })\n            }\n        };\n    },\n\n    watch: {\n        'list': function list(_list) {\n            this.forms.editList.title = _list.title;\n        }\n    },\n\n    methods: {\n        getList: function getList(id) {\n            var self = this;\n\n            this.$http.get('/api/lists/' + id).then(function (response) {\n                self.list = response.data;\n            });\n        },\n\n        updateList: function updateList() {\n            var self = this;\n\n            Spaceport.put('/api/lists/' + this.list.id, this.forms.editList).then(function () {\n                self.$router.go({ name: 'list.index' });\n            });\n        },\n\n        deleteList: function deleteList() {\n            var self = this;\n\n            Spaceport.delete('/api/lists/' + this.list.id, this.forms.editList).then(function () {\n                self.$router.go({ name: 'list.index' });\n            });\n        }\n    }\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Listes</div>\\n    <form role=\\\"form\\\">\\n        <div class=\\\"panel-body\\\">\\n            <text-field :display=\\\"'Title'\\\" :form=\\\"forms.editList\\\" :name=\\\"'title'\\\" :input.sync=\\\"forms.editList.title\\\">\\n            </text-field>\\n        </div>\\n        <div class=\\\"panel-footer\\\">\\n            <button v-on:click=\\\"updateList\\\" class=\\\"btn btn-primary\\\">Save</button>\\n        </div>\\n    </form>\\n</div>\\n\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Delete</div>\\n    <div class=\\\"panel-body\\\">\\n        <button v-on:click=\\\"deleteList\\\" class=\\\"btn btn-danger\\\">Delete</button>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\lists\\\\list-edit.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],19:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    mixins: [SpaceportBreadcrumbs],\n\n    ready: function ready() {\n        this.setBreadcrumb('Lists');\n        this.getLists();\n    },\n\n    data: function data() {\n        return {\n            lists: []\n        };\n    },\n\n    methods: {\n        /*\n         * Get the lists from the API.\n         */\n        getLists: function getLists() {\n            this.$http.get('/api/lists/').then(function (lists) {\n                this.lists = lists.data;\n            });\n        }\n    }\n\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Listes\\n        <a v-link=\\\"{ name: 'list.create' }\\\" class=\\\"btn btn-xs btn-success pull-right\\\">Create a new list</a>\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        <ul>\\n            <p v-if=\\\"lists.length == 0\\\"> Aucune liste </p>\\n            <li v-for=\\\"list in lists\\\">\\n                <a v-link=\\\"{ name: 'list.show', params: { listId: list.id } }\\\"> {{ list.title }} </a>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\lists\\\\list-index.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],20:[function(require,module,exports){\n'use strict';\n\nmodule.exports = {\n\n    ready: function ready() {\n        this.getColumns();\n    },\n\n    data: function data() {\n        return {\n            columns: []\n        };\n    },\n\n    methods: {\n        getColumns: function getColumns() {\n            this.$http.get('/api/lists/' + this.$route.params.listId + '/columns').then(function (columns) {\n                this.columns = columns.data;\n            });\n        }\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">Actions</div>\\n    <div class=\\\"panel-body\\\">\\n        <a v-link=\\\"{ name: 'list.edit', params: { listId: $route.params.listId } }\\\" class=\\\"btn btn-warning\\\">Edit</a>\\n    </div>\\n</div>\\n\\n<div class=\\\"panel panel-default\\\">\\n    <div class=\\\"panel-heading\\\">\\n        Colonnes\\n        <a v-link=\\\"{ name: 'column.create', params: { listId: $route.params.listId } }\\\" class=\\\"btn btn-xs btn-success pull-right\\\">Create a new column</a>\\n    </div>\\n\\n    <div class=\\\"panel-body\\\">\\n        <ul>\\n            <p v-if=\\\"columns.length == 0\\\"> Aucune colonne </p>\\n            <li v-for=\\\"column in columns\\\">\\n                <a v-link=\\\"{ name: 'column.edit', params: { listId: $route.params.listId, columnId: column.id } }\\\"> {{ column.title }} </a>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\lists\\\\list-show.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}],21:[function(require,module,exports){\n'use strict';\n\nwindow.Spaceport = {};\n\nVue.config.debug = true;\n\n/*\n * Load the Spaceport components.\n */\nrequire('./core/components');\n\n/**\n * Load the Spaceport application\n */\nwindow.SpaceportApp = Vue.extend();\n\n/**\n * Load the Spaceport routes\n */\nrequire('./core/routes.js');\n\n/**\n * Start the Spaceport application\n */\nSpaceportRouter.start(SpaceportApp, '#spaceport-app');\n\n},{\"./core/components\":4,\"./core/routes.js\":5}],22:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = {\n    ready: function ready() {\n        //\n    },\n\n    data: function data() {\n        return {\n            breadcrumbs: breadcrumbsData\n        };\n    }\n};\nif (module.exports.__esModule) module.exports = module.exports.default\n;(typeof module.exports === \"function\"? module.exports.options: module.exports).template = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-10 col-md-offset-1\\\">\\n\\n      Breadcrumbs: {{ breadcrumbs.join(' &gt; ') }}\\n\\n      <br>\\n\\n      <a v-link=\\\"{ name: 'list.index' }\\\">Go to Lists</a>\\n\\n      <router-view></router-view>\\n\\n    </div>\\n  </div>\\n</div>\\n\"\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"C:\\\\Users\\\\psamson\\\\Documents\\\\GitHub\\\\spaceport\\\\resources\\\\assets\\\\js\\\\views\\\\lists.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, (typeof module.exports === \"function\" ? module.exports.options : module.exports).template)\n  }\n})()}\n},{\"vue\":\"vue\",\"vue-hot-reload-api\":\"vue-hot-reload-api\"}]},{},[21]);\n"],"file":"spaceport.js","sourceRoot":"/source/"}